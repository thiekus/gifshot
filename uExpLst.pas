unit uExpLst;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, AppEvnts, JclDebug;

type
  TfrmExcLog = class(TForm)
    mmExcp: TMemo;
    ApplicationEvents1: TApplicationEvents;
    procedure ApplicationEvents1Exception(Sender: TObject; E: Exception);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmExcLog: TfrmExcLog;

implementation

{$R *.dfm}

procedure TfrmExcLog.ApplicationEvents1Exception(Sender: TObject;
  E: Exception);
begin

  frmExcLog.Show;

  // Log time stamp
  mmExcp.Lines.Add(DateTimeToStr(Now));

  // Log unhandled exception stack info to ExceptionLogMemo
  JclLastExceptStackListToStrings(mmExcp.Lines, False, True, True, False);

  // Insert empty line
  mmExcp.Lines.Add('');

  // Display default VCL unhandled exception dialog
  Application.ShowException(E);

end;

procedure TfrmExcLog.FormCreate(Sender: TObject);
begin
  frmExcLog.Left:= 0;
  frmExcLog.Top:= 0;
end;

{initialization

  // Enable raw mode (default mode uses stack frames which aren't always generated by the compiler)
  Include(JclStackTrackingOptions, stRawMode);
  // Disable stack tracking in dynamically loaded modules (it makes stack tracking code a bit faster)
  Include(JclStackTrackingOptions, stStaticModuleList);

  // Initialize Exception tracking
  JclStartExceptionTracking;

finalization

  // Uninitialize Exception tracking
  JclStopExceptionTracking;}

end.
